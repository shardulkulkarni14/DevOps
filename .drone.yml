kind: pipeline
type: docker
name: default
  # Note: Use as long as the reason for this suddenly occurring error
  #       remains unknown. Also use it if the error suddenly happens during
  #       productive use after problem free operations
clone:
  skip_verify: true


steps:
- name: decrypt - managing secret solution files
  # cp. https://hub.docker.com/r/frapsoft/openssl
  image: frapsoft/openssl
  environment:
    KEY:
      from_secret: key
  commands:
  - openssl enc -d -aes-256-cbc -md sha256 -pass env:KEY -in ./${DRONE_BRANCH}/src.tar.enc -out ./${DRONE_BRANCH}/src.tar
  - tar -xvf ./${DRONE_BRANCH}/src.tar


- name: build all docker images needed
  image: docker
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  commands:
  - docker --version && cd ${DRONE_BRANCH}
  - docker --version && cd ../src
  - docker build --quiet -t ${DRONE_BRANCH}.python.solution -f Dockerfile.python.df .
  - rm -rf ../src
  - rm -f ./src.tar
  - cd ../${DRONE_BRANCH}
  - docker build --quiet -t ${DRONE_BRANCH}.main -f Dockerfile.main.df .

- name: server.local
  image: ${DRONE_BRANCH}.main
  pull: never
  detach: true
  commands:

  - caddy run --config /etc/caddy/Caddyfile &
  - /bin/bash -c 'while true ; do echo "server running on $(hostname)" ; sleep 1 ; done'


- name: decrypt again
  image: frapsoft/openssl
  environment:
    KEY:
      from_secret: key
  commands:
  - openssl enc -d -aes-256-cbc -md sha256 -pass env:KEY -in ./${DRONE_BRANCH}/src.tar.enc -out ./${DRONE_BRANCH}/src.tar
  - tar -xvf ./${DRONE_BRANCH}/src.tar

- name: check if main worked as expected
  image: ${DRONE_BRANCH}.python.solution
  pull: never
  commands:
  - cd src
  - python check.py

volumes:
- name: dockersock
  host:
    path: /var/run/docker.sock

trigger:
  branch:
  - feature*